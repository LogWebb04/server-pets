{"data": [{"__module__": {"discord.invite": "<class 'str'>"}}, {"__doc__": {"Represents a Discord :class:`Guild` or :class:`abc.GuildChannel` invite.\n\n    Depending on the way this object was created, some of the attributes can\n    have a value of ``None``.\n\n    .. container:: operations\n\n        .. describe:: x == y\n\n            Checks if two invites are equal.\n\n        .. describe:: x != y\n\n            Checks if two invites are not equal.\n\n        .. describe:: hash(x)\n\n            Returns the invite hash.\n\n        .. describe:: str(x)\n\n            Returns the invite URL.\n\n    The following table illustrates what methods will obtain the attributes:\n\n    +------------------------------------+----------------------------------------------------------+\n    |             Attribute              |                          Method                          |\n    +====================================+==========================================================+\n    | :attr:`max_age`                    | :meth:`abc.GuildChannel.invites`\\, :meth:`Guild.invites` |\n    +------------------------------------+----------------------------------------------------------+\n    | :attr:`max_uses`                   | :meth:`abc.GuildChannel.invites`\\, :meth:`Guild.invites` |\n    +------------------------------------+----------------------------------------------------------+\n    | :attr:`created_at`                 | :meth:`abc.GuildChannel.invites`\\, :meth:`Guild.invites` |\n    +------------------------------------+----------------------------------------------------------+\n    | :attr:`temporary`                  | :meth:`abc.GuildChannel.invites`\\, :meth:`Guild.invites` |\n    +------------------------------------+----------------------------------------------------------+\n    | :attr:`uses`                       | :meth:`abc.GuildChannel.invites`\\, :meth:`Guild.invites` |\n    +------------------------------------+----------------------------------------------------------+\n    | :attr:`approximate_member_count`   | :meth:`Client.fetch_invite`                              |\n    +------------------------------------+----------------------------------------------------------+\n    | :attr:`approximate_presence_count` | :meth:`Client.fetch_invite`                              |\n    +------------------------------------+----------------------------------------------------------+\n\n    If it's not in the table above then it is available by all methods.\n\n    Attributes\n    -----------\n    max_age: :class:`int`\n        How long the before the invite expires in seconds. A value of 0 indicates that it doesn't expire.\n    code: :class:`str`\n        The URL fragment used for the invite.\n    guild: Optional[Union[:class:`Guild`, :class:`Object`, :class:`PartialInviteGuild`]]\n        The guild the invite is for. Can be ``None`` if it's from a group direct message.\n    revoked: :class:`bool`\n        Indicates if the invite has been revoked.\n    created_at: :class:`datetime.datetime`\n        A datetime object denoting the time the invite was created.\n    temporary: :class:`bool`\n        Indicates that the invite grants temporary membership.\n        If ``True``, members who joined via this invite will be kicked upon disconnect.\n    uses: :class:`int`\n        How many times the invite has been used.\n    max_uses: :class:`int`\n        How many times the invite can be used.\n    inviter: :class:`User`\n        The user who created the invite.\n    approximate_member_count: Optional[:class:`int`]\n        The approximate number of members in the guild.\n    approximate_presence_count: Optional[:class:`int`]\n        The approximate number of members currently active in the guild.\n        This includes idle, dnd, online, and invisible members. Offline members are excluded.\n    channel: Union[:class:`abc.GuildChannel`, :class:`Object`, :class:`PartialInviteChannel`]\n        The channel the invite is for.\n    ": "<class 'str'>"}}, {"__slots__": {"('max_age', 'code', 'guild', 'revoked', 'created_at', 'uses', 'temporary', 'max_uses', 'inviter', 'channel', '_state', 'approximate_member_count', 'approximate_presence_count')": "<class 'tuple'>"}}, {"BASE": {"https://discord.gg": "<class 'str'>"}}, {"__init__": {"<bound method Invite.__init__ of <Invite code='J96kCHw' guild=<Guild id=605754700503187466 name='Lgan' shard_id=0 chunked=True member_count=41> online=None members=None>>": "<class 'method'>"}}, {"from_incomplete": {"<bound method Invite.from_incomplete of <class 'discord.invite.Invite'>>": "<class 'method'>"}}, {"from_gateway": {"<bound method Invite.from_gateway of <class 'discord.invite.Invite'>>": "<class 'method'>"}}, {"__str__": {"<bound method Invite.__str__ of <Invite code='J96kCHw' guild=<Guild id=605754700503187466 name='Lgan' shard_id=0 chunked=True member_count=41> online=None members=None>>": "<class 'method'>"}}, {"__repr__": {"<bound method Invite.__repr__ of <Invite code='J96kCHw' guild=<Guild id=605754700503187466 name='Lgan' shard_id=0 chunked=True member_count=41> online=None members=None>>": "<class 'method'>"}}, {"__hash__": {"<bound method Invite.__hash__ of <Invite code='J96kCHw' guild=<Guild id=605754700503187466 name='Lgan' shard_id=0 chunked=True member_count=41> online=None members=None>>": "<class 'method'>"}}, {"id": {"J96kCHw": "<class 'str'>"}}, {"url": {"https://discord.gg/J96kCHw": "<class 'str'>"}}, {"delete": {"<bound method Invite.delete of <Invite code='J96kCHw' guild=<Guild id=605754700503187466 name='Lgan' shard_id=0 chunked=True member_count=41> online=None members=None>>": "<class 'method'>"}}, {"_state": {"<discord.state.AutoShardedConnectionState object at 0x00000177BEF06588>": "<class 'discord.state.AutoShardedConnectionState'>"}}, {"approximate_member_count": {"None": "<class 'NoneType'>"}}, {"approximate_presence_count": {"None": "<class 'NoneType'>"}}, {"channel": {"testing": "<class 'discord.channel.TextChannel'>"}}, {"code": {"J96kCHw": "<class 'str'>"}}, {"created_at": {"None": "<class 'NoneType'>"}}, {"guild": {"Lgan": "<class 'discord.guild.Guild'>"}}, {"inviter": {"None": "<class 'NoneType'>"}}, {"max_age": {"None": "<class 'NoneType'>"}}, {"max_uses": {"None": "<class 'NoneType'>"}}, {"revoked": {"None": "<class 'NoneType'>"}}, {"temporary": {"None": "<class 'NoneType'>"}}, {"uses": {"None": "<class 'NoneType'>"}}, {"__eq__": {"<bound method EqualityComparable.__eq__ of <Invite code='J96kCHw' guild=<Guild id=605754700503187466 name='Lgan' shard_id=0 chunked=True member_count=41> online=None members=None>>": "<class 'method'>"}}, {"__ne__": {"<bound method EqualityComparable.__ne__ of <Invite code='J96kCHw' guild=<Guild id=605754700503187466 name='Lgan' shard_id=0 chunked=True member_count=41> online=None members=None>>": "<class 'method'>"}}, {"__getattribute__": {"<method-wrapper '__getattribute__' of Invite object at 0x00000177CA16BDC8>": "<class 'method-wrapper'>"}}, {"__setattr__": {"<method-wrapper '__setattr__' of Invite object at 0x00000177CA16BDC8>": "<class 'method-wrapper'>"}}, {"__delattr__": {"<method-wrapper '__delattr__' of Invite object at 0x00000177CA16BDC8>": "<class 'method-wrapper'>"}}, {"__lt__": {"<method-wrapper '__lt__' of Invite object at 0x00000177CA16BDC8>": "<class 'method-wrapper'>"}}, {"__le__": {"<method-wrapper '__le__' of Invite object at 0x00000177CA16BDC8>": "<class 'method-wrapper'>"}}, {"__gt__": {"<method-wrapper '__gt__' of Invite object at 0x00000177CA16BDC8>": "<class 'method-wrapper'>"}}, {"__ge__": {"<method-wrapper '__ge__' of Invite object at 0x00000177CA16BDC8>": "<class 'method-wrapper'>"}}, {"__new__": {"<built-in method __new__ of type object at 0x00007FFA69798EC0>": "<class 'builtin_function_or_method'>"}}, {"__reduce_ex__": {"<built-in method __reduce_ex__ of Invite object at 0x00000177CA16BDC8>": "<class 'builtin_function_or_method'>"}}, {"__reduce__": {"<built-in method __reduce__ of Invite object at 0x00000177CA16BDC8>": "<class 'builtin_function_or_method'>"}}, {"__subclasshook__": {"<built-in method __subclasshook__ of type object at 0x00000177BE42A318>": "<class 'builtin_function_or_method'>"}}, {"__init_subclass__": {"<built-in method __init_subclass__ of type object at 0x00000177BE42A318>": "<class 'builtin_function_or_method'>"}}, {"__format__": {"<built-in method __format__ of Invite object at 0x00000177CA16BDC8>": "<class 'builtin_function_or_method'>"}}, {"__sizeof__": {"<built-in method __sizeof__ of Invite object at 0x00000177CA16BDC8>": "<class 'builtin_function_or_method'>"}}, {"__dir__": {"<built-in method __dir__ of Invite object at 0x00000177CA16BDC8>": "<class 'builtin_function_or_method'>"}}, {"__class__": {"<class 'discord.invite.Invite'>": "<class 'type'>"}}]}